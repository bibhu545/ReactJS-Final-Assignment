{"version":3,"sources":["Utils/Utils.js","Utils/Models.js","Utils/Data.js","Components/Home.js","Redux/Actions.js","Utils/withCommonHOC.js","Components/Airports.js","Redux/ActionTypes.js","Components/AirportSummary.js","Components/FuelReport.js","Components/AirCrafts.js","Components/Dashboard.js","Redux/Reducer.js","Redux/Store.js","App.js","serviceWorker.js","index.js"],"names":["getRandomId","Math","floor","random","toString","Utils","message","footerMessage","Swal","fire","icon","title","text","footer","confirmBtnText","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","User","userId","name","email","password","Airport","airportId","airportName","fuelCapacity","fuelAvailable","AirCraft","airCraftId","airCraftNo","airline","Transaction","transactionId","transactionDateTime","Date","toLocaleString","transactionType","quantity","transactionIdParent","FuelAction","addMode","amount","USERS","Home","props","useState","user","setUser","handleLoginDataChange","e","target","value","userCopy","className","onSubmit","preventDefault","findIndex","item","sessionStorage","setItem","window","location","showErrorMessage","htmlFor","type","id","placeholder","onChange","required","aria-hidden","handleTransactionFromAirport","airports","airportData","fuelActionData","itemIndex","parseInt","transaction","withCommonHOC","CurrentComponent","sortData","data","key","sortOrder","state","order","setState","sort","a","b","this","Component","connect","aircrafts","dispatch","addAirport","createTransactionFromAirport","airport","fuelAction","showModal","setShowModal","showTransactionModal","setShowTransactionModal","setAirport","setFuelAction","closeAirportModal","onAirportValueChanged","airportCopy","openTransactionModal","mode","closeTransactionModal","onFuelActionChanged","fuelActionCopy","Fragment","onClick","map","index","href","console","log","transactions","addTransaction","reverseTransaction","setTransaction","setTransactionValues","tempTrans","summaryModal","setSummaryModal","length","toUpperCase","itemCopy","onReverseTransaction","result","reduce","r","push","Object","create","reportJsx","keyIndex","keyName","find","colSpan","entries","viewSummary","addAircraft","aircraft","setAircraft","closeAircraftModal","onAircraftValueChanged","aircraftCopy","Dashboard","component","getItem","logout","getComponent","commonInitialState","store","createStore","action","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d0f5f05e.chunk.js","sourcesContent":["import Swal from 'sweetalert2'\r\n\r\nexport const getRandomId = () => {\r\n    return Math.floor((Math.random()) * 0x10000).toString(16)\r\n}\r\n\r\nexport class Utils {\r\n    showErrorMessage(message, footerMessage) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: message,\r\n            footer: footerMessage\r\n        })\r\n    }\r\n    showSuccessMessage(message) {\r\n        Swal.fire(\r\n            message,\r\n            'Your file has been deleted.',\r\n            'success'\r\n        )\r\n    }\r\n    showConfirm(message, confirmBtnText) {\r\n        return Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: message,\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: confirmBtnText\r\n        });\r\n    }\r\n}","import { getRandomId } from \"./Utils\"\r\n\r\nexport class User {\r\n    userId = getRandomId()\r\n    name = \"\"\r\n    email = \"\"\r\n    password = \"\"\r\n}\r\n\r\nexport class Airport {\r\n    airportId = getRandomId()\r\n    airportName = \"\"\r\n    fuelCapacity = 0\r\n    fuelAvailable = 0\r\n}\r\n\r\nexport class AirCraft {\r\n    airCraftId = getRandomId()\r\n    airCraftNo = \"\"\r\n    airline = \"\"\r\n}\r\n\r\nexport class Transaction {\r\n    transactionId = getRandomId()\r\n    transactionDateTime = new Date().toLocaleString()\r\n    transactionType = \"\"\r\n    airportId = \"\"\r\n    airCraftId = \"\"\r\n    quantity = 0\r\n    transactionIdParent = \"\"\r\n}\r\n\r\nexport class FuelAction {\r\n    addMode = true\r\n    amount = 0\r\n    airCraftId = \"\"\r\n}","export const USERS = [\r\n    { userId: 1, name: \"Bibhu Ranjan\", email: \"bibhu@gmail.com\", password: \"pass\" }\r\n]\r\n\r\nexport const AIRPORTS = [\r\n    { airportId: \"1a2b\", airportName: \"Indira Gandhi International Airport, Delhi\", fuelCapacity: 5000, fuelAvailable: 1200 },\r\n    { airportId: \"2b3c\", airportName: \"Rajiv Gandhi International Airport, Hyderabad\", fuelCapacity: 3000, fuelAvailable: 2500 },\r\n    { airportId: \"3d4e\", airportName: \"Chhatrapati Shivaji International Airport, Mumbai\", fuelCapacity: 8000, fuelAvailable: 4500 },\r\n    { airportId: \"4f5g\", airportName: \"Chennai International Airport, Chennai\", fuelCapacity: 4500, fuelAvailable: 2000 },\r\n    { airportId: \"5h6i\", airportName: \"Kempegowda International Airport, Bangalore\", fuelCapacity: 10000, fuelAvailable: 7500 }\r\n]\r\n\r\n\r\nexport const AIRCRAFTS = [\r\n    { airCraftId: \"1a95\", airCraftNo: \"ING-1234\", airline: \"IndiGo\" },\r\n    { airCraftId: \"3h4k\", airCraftNo: \"GO-3211\", airline: \"Go Air\" },\r\n    { airCraftId: \"0e4s\", airCraftNo: \"SP-0034\", airline: \"Spice Jet\" },\r\n    { airCraftId: \"8k4q\", airCraftNo: \"IND-6789\", airline: \"Air India\" },\r\n    { airCraftId: \"2x4w\", airCraftNo: \"AA-9876\", airline: \"Air Asia\" }\r\n]","import React, { useState } from 'react'\r\nimport { User } from '../Utils/Models'\r\nimport { USERS } from '../Utils/Data'\r\nimport { Utils } from '../Utils/Utils'\r\n\r\nfunction Home(props) {\r\n\r\n    const [user, setUser] = useState(new User())\r\n\r\n    const handleLoginDataChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        let userCopy = { ...user }\r\n        userCopy[name] = value\r\n        setUser(userCopy)\r\n    }\r\n\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        if (USERS.findIndex(item => item.email === user.email && item.password === user.password) >= 0) {\r\n            sessionStorage.setItem(\"loggedIn\", true);\r\n            window.location = \"/dashboard\";\r\n        }\r\n        else {\r\n            new Utils().showErrorMessage(\"Invalid Username or Password.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-wrapper\">\r\n            <div className=\"overlay\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\"></div>\r\n                        <div className=\"col-sm-6 login-container\">\r\n                            <div className=\"login-content\">\r\n                                <h4 className=\"center-content\">Welcome to Airport Inventory</h4>\r\n                                <form onSubmit={login}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email*:</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"E.g. jhon@gmail.com\"\r\n                                            value={user.email}\r\n                                            onChange={handleLoginDataChange} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password*:</label>\r\n                                        <input \r\n                                            type=\"password\" \r\n                                            className=\"form-control\" \r\n                                            id=\"password\" \r\n                                            name=\"password\" \r\n                                            placeholder=\"Enter your password\" \r\n                                            value={user.password} \r\n                                            onChange={handleLoginDataChange} required />\r\n                                    </div>\r\n                                    <div className=\"right-content\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                                            Login to Continue <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home\r\n","import { ADD_TRANSACTION, ADD_AIRPORT, ADD_AIRCRAFT, CREATE_TRANS_FROM_AIRPORT } from \"./ActionTypes\"\r\nimport { Transaction } from \"../Utils/Models\"\r\n\r\nexport const addTransaction = (trData) => {\r\n    return {\r\n        type: ADD_TRANSACTION,\r\n        data: trData\r\n    }\r\n}\r\n\r\nexport const reverseTransaction = (trData) => {\r\n    return {\r\n        type: ADD_TRANSACTION,\r\n        data: trData\r\n    }\r\n}\r\n\r\nexport const addAirport = (airportData) => {\r\n    return {\r\n        type: ADD_AIRPORT,\r\n        data: airportData\r\n    }\r\n}\r\n\r\nexport const addAircraft = (aircraftData) => {\r\n    return {\r\n        type: ADD_AIRCRAFT,\r\n        data: aircraftData\r\n    }\r\n}\r\n\r\nexport const createTransactionFromAirport = (airportData, fuelActionData) => {\r\n    return {\r\n        type: CREATE_TRANS_FROM_AIRPORT,\r\n        airport: airportData,\r\n        fuelAction: fuelActionData,\r\n    }\r\n}\r\n\r\nexport const handleTransactionFromAirport = (airports, airportData, fuelActionData) => {\r\n    let itemIndex = airports.findIndex((item => item.airportId === airportData.airportId));\r\n    if (fuelActionData.addMode) {\r\n        airports[itemIndex].fuelAvailable = parseInt(airports[itemIndex].fuelAvailable) + parseInt(fuelActionData.amount);\r\n    }\r\n    else {\r\n        airports[itemIndex].fuelAvailable = parseInt(airports[itemIndex].fuelAvailable) - parseInt(fuelActionData.amount);\r\n    }\r\n    let transaction = new Transaction();\r\n    transaction.transactionType = fuelActionData.addMode ? \"IN\" : \"OUT\";\r\n    transaction.airportId = airportData.airportId;\r\n    transaction.airCraftId = fuelActionData.airCraftId;\r\n    transaction.quantity = fuelActionData.amount;\r\n    return {\r\n        airports: airports,\r\n        transaction: transaction\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nconst withCommonHOC = (CurrentComponent) => {\r\n\r\n    class UpdatedComponent extends Component {\r\n\r\n        constructor(props) {\r\n            super(props)\r\n\r\n            this.state = {\r\n                order: false\r\n            }\r\n        }\r\n\r\n        sortData = (data, key) => {\r\n            let sortOrder = this.state.order\r\n            this.setState({\r\n                order: !sortOrder\r\n            }, () => {\r\n                data.sort(function (a, b) {\r\n                    return (sortOrder ? (a[key] > b[key] ? 1 : -1) : (a[key] > b[key] ? -1 : 1));\r\n                });\r\n                this.setState({})\r\n            })\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <CurrentComponent {...this.props} sortData={this.sortData} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return UpdatedComponent;\r\n}\r\n\r\nexport default withCommonHOC","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Airport, FuelAction } from '../Utils/Models';\r\nimport { addAirport, createTransactionFromAirport } from '../Redux/Actions';\r\nimport withCommonHOC from '../Utils/withCommonHOC';\r\n\r\nfunction Airports(props) {\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [showTransactionModal, setShowTransactionModal] = useState(false)\r\n    const [airport, setAirport] = useState(new Airport())\r\n    const [fuelAction, setFuelAction] = useState(new FuelAction())\r\n\r\n    const closeAirportModal = () => {\r\n        setAirport(new Airport());\r\n        setShowModal(false);\r\n    }\r\n\r\n    const onAirportValueChanged = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        let airportCopy = { ...airport }\r\n        airportCopy[name] = value\r\n        setAirport(airportCopy)\r\n    }\r\n\r\n    const createAirport = (e) => {\r\n        e.preventDefault();\r\n        console.log(airport)\r\n        props.addAirport(airport);\r\n        setShowModal(false);\r\n    }\r\n\r\n    const openTransactionModal = (e, item, mode) => {\r\n        e.preventDefault();\r\n        setFuelAction({ ...fuelAction, addMode: mode });\r\n        setAirport(item);\r\n        setShowTransactionModal(true);\r\n    }\r\n\r\n    const closeTransactionModal = () => {\r\n        setFuelAction(new FuelAction());\r\n        setShowTransactionModal(false);\r\n    }\r\n\r\n    const onFuelActionChanged = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        let fuelActionCopy = { ...fuelAction }\r\n        fuelActionCopy[name] = value\r\n        setFuelAction(fuelActionCopy)\r\n    }\r\n\r\n    const createTransaction = (e) => {\r\n        e.preventDefault();\r\n        props.createTransactionFromAirport(airport, fuelAction);\r\n        setFuelAction(new FuelAction());\r\n        setShowTransactionModal(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"table-container\">\r\n                <h3 className=\"center-content text-primary\">\r\n                    Airports\r\n                    <button className=\"btn btn-light\" onClick={() => setShowModal(true)}>\r\n                        <i className=\"fa fa-plus\"></i>\r\n                    </button>\r\n                </h3>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-bordered table-striped data-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Sl no.</th>\r\n                                <th onClick={() => props.sortData(props.airports, \"airportName\")}>Name</th>\r\n                                <th onClick={() => props.sortData(props.airports, \"fuelCapacity\")}>Fuel Capacity</th>\r\n                                <th onClick={() => props.sortData(props.airports, \"fuelAvailable\")}>Fuel Available</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                props.airports.map((item, index) =>\r\n                                    <tr key={item.airportId}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{item.airportName}</td>\r\n                                        <td>{item.fuelCapacity}</td>\r\n                                        <td>{item.fuelAvailable}</td>\r\n                                        <td>\r\n                                            <a href=\"/\" onClick={(e) => openTransactionModal(e, item, true)}>Add</a> /\r\n                                            <a href=\"/\" onClick={(e) => openTransactionModal(e, item, false)}>Withdraw</a>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {\r\n\r\n                !showModal ? null :\r\n                    <div className=\"modal-wrapper\">\r\n                        <div className=\"custom-modal\">\r\n                            <div className=\"custom-modal-header\">\r\n                                <h5>\r\n                                    Add New Airport\r\n                                    <i className=\"fa fa-times-circle float-right\" onClick={closeAirportModal}></i>\r\n                                </h5>\r\n                            </div>\r\n                            <div className=\"custom-modal-body\">\r\n                                <form onSubmit={createAirport}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"airportName\">Airport Name:</label>\r\n                                        <input id=\"airportName\" name=\"airportName\" className=\"form-control\" value={airport.airportName} onChange={onAirportValueChanged} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"fuelCapacity\">Capacity: </label>\r\n                                        <input type=\"number\" className=\"form-control\" id=\"fuelCapacity\" name=\"fuelCapacity\" value={airport.fuelCapacity} onChange={onAirportValueChanged} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"fuelAvailable\">Available Fuel: </label>\r\n                                        <input type=\"number\" className=\"form-control\" id=\"fuelAvailable\" name=\"fuelAvailable\" value={airport.fuelAvailable} onChange={onAirportValueChanged} />\r\n                                    </div>\r\n                                    <div className=\"center-content\">\r\n                                        <button type=\"submit\" className=\"btn btn-light\">Submit</button>\r\n                                        <button type=\"button\" className=\"btn btn-light\" onClick={closeAirportModal}>Cancel</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n\r\n            {\r\n\r\n                !showTransactionModal ? null :\r\n                    <div className=\"modal-wrapper\">\r\n                        <div className=\"custom-modal\">\r\n                            <div className=\"custom-modal-header\">\r\n                                <h5>\r\n                                    Add / Withdraw Fuel\r\n                                    <i className=\"fa fa-times-circle float-right\" onClick={closeTransactionModal}></i>\r\n                                </h5>\r\n                            </div>\r\n                            <div className=\"custom-modal-body\">\r\n                                <form onSubmit={createTransaction}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"amount\">Amount: </label>\r\n                                        <input type=\"number\" className=\"form-control\" id=\"amount\" name=\"amount\" value={fuelAction.amount} onChange={onFuelActionChanged} />\r\n                                    </div>\r\n                                    {\r\n                                        !fuelAction.addMode &&\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"airCraftId\">Aircraft ID:</label>\r\n                                            <select id=\"airCraftId\" name=\"airCraftId\" className=\"form-control\" value={fuelAction.airCraftId} onChange={onFuelActionChanged}>\r\n                                                <option value=\"\">Select</option>\r\n                                                {\r\n                                                    props.aircrafts.map((item, index) =>\r\n                                                        <option key={item.airCraftId} value={item.airCraftId}>{item.airCraftNo}</option>\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    }\r\n                                    <div className=\"center-content\">\r\n                                        <button type=\"submit\" className=\"btn btn-light\">Submit</button>\r\n                                        <button type=\"button\" className=\"btn btn-light\" onClick={closeTransactionModal}>Cancel</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        airports: state.airports,\r\n        aircrafts: state.aircrafts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addAirport: (data) => dispatch(addAirport(data)),\r\n        createTransactionFromAirport: (airport, fuelAction) => dispatch(createTransactionFromAirport(airport, fuelAction))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCommonHOC(Airports))\r\n","export const ADD_TRANSACTION = \"ADD_TRANSACTION\"\r\nexport const REVERSE_TRANSACTION = \"REVERSE_TRANSACTION\"\r\nexport const ADD_AIRPORT = \"ADD_AIRPORT\"\r\nexport const ADD_AIRCRAFT = \"ADD_AIRCRAFT\"\r\nexport const CREATE_TRANS_FROM_AIRPORT = \"CREATE_TRANS_FROM_AIRPORT\"","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport withCommonHOC from '../Utils/withCommonHOC'\r\n\r\nfunction AirportSummary(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"table-container\">\r\n                <h3 className=\"center-content text-primary\">\r\n                    Airport Fuel Summary\r\n                </h3>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-bordered table-striped data-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Sl no.</th>\r\n                                <th onClick={() => props.sortData(props.airports, \"airportName\")}>Name</th>\r\n                                <th onClick={() => props.sortData(props.airports, \"fuelCapacity\")}>Fuel Capacity</th>\r\n                                <th onClick={() => props.sortData(props.airports, \"fuelAvailable\")}>Fuel Available</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                props.airports.map((item, index) =>\r\n                                    <tr key={item.airportId}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{item.airportName}</td>\r\n                                        <td>{item.fuelCapacity}</td>\r\n                                        <td>{item.fuelAvailable}</td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        airports: state.airports\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCommonHOC(AirportSummary))\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Transaction } from \"../Utils/Models\";\r\nimport { addTransaction, reverseTransaction } from '../Redux/Actions';\r\nimport { getRandomId } from '../Utils/Utils';\r\nimport withCommonHOC from '../Utils/withCommonHOC';\r\n\r\nfunction FuelReport(props) {\r\n\r\n    const [transaction, setTransaction] = useState(new Transaction())\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    const closeTransactionModal = () => {\r\n        setTransaction(new Transaction());\r\n        setShowModal(false);\r\n    }\r\n\r\n    const setTransactionValues = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        let tempTrans = { ...transaction }\r\n        tempTrans[name] = value\r\n        setTransaction(tempTrans)\r\n    }\r\n\r\n    const createTransaction = (e) => {\r\n        e.preventDefault();\r\n        props.addTransaction(transaction);\r\n        setTransaction(new Transaction());\r\n        setShowModal(false);\r\n    }\r\n\r\n    const onReverseTransaction = (item) => {\r\n        let itemCopy = { ...item }\r\n        if (itemCopy.transactionType === \"IN\") {\r\n            itemCopy.transactionType = \"OUT\";\r\n        }\r\n        else if (itemCopy.transactionType === \"OUT\") {\r\n            itemCopy.transactionType = \"IN\";\r\n        }\r\n        itemCopy.transactionIdParent = item.transactionId;\r\n        itemCopy.transactionId = getRandomId()\r\n        props.reverseTransaction(itemCopy);\r\n    }\r\n\r\n    const [summaryModal, setSummaryModal] = useState(false)\r\n\r\n    const viewSummary = () => {\r\n        let result = props.transactions.reduce((r, a) => {\r\n            r[a.airportId] = r[a.airportId] || [];\r\n            r[a.airportId].push(a);\r\n            return r;\r\n        }, Object.create(null));\r\n        let reportJsx = [];\r\n        let keyIndex = 0;\r\n        for (let [key, value] of Object.entries(result)) {\r\n            let keyName = props.airports.find(item => item.airportId === key).airportName;\r\n            reportJsx.push(<tr key={key}><td colSpan=\"4\"><strong>{keyName}</strong></td></tr>);\r\n            reportJsx.push(\r\n                <tr key={keyIndex}>\r\n                    <td>Date</td>\r\n                    <td>Type</td>\r\n                    <td>Quantity</td>\r\n                    <td>Aircraft Id</td>\r\n                </tr>\r\n            )\r\n            value.map((item, index) =>\r\n                reportJsx.push(\r\n                    <tr key={item.transactionId}>\r\n                        <td>{item.transactionDateTime}</td>\r\n                        <td>{item.transactionType}</td>\r\n                        <td>{item.quantity}</td>\r\n                        <td>{item.airCraftId === \"\" ? \"N/A\" : item.airCraftId}</td>\r\n                    </tr>\r\n                )\r\n            );\r\n            keyIndex++;\r\n        }\r\n        return <table className=\"table table-bordered\"><tbody>{reportJsx}</tbody></table>;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"table-container\">\r\n                <h3 className=\"text-primary\">\r\n                    Transactions\r\n                    <button className=\"btn btn-light\" onClick={() => setShowModal(true)}>\r\n                        <i className=\"fa fa-plus\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-primary float-right\" onClick={() => setSummaryModal(true)}>View Summary</button>\r\n                </h3>\r\n                {\r\n                    props.transactions.length === 0 ?\r\n                        <h4 className=\"center-content\">No Transactions yet.</h4> :\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered table-striped data-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#Id</th>\r\n                                        <th onClick={() => props.sortData(props.transactions, \"transactionDateTime\")}>Date</th>\r\n                                        <th onClick={() => props.sortData(props.transactions, \"transactionType\")}>Type</th>\r\n                                        <th onClick={() => props.sortData(props.transactions, \"airportId\")}>Airport Id</th>\r\n                                        <th onClick={() => props.sortData(props.transactions, \"airCraftId\")}>Aircraft Id</th>\r\n                                        <th onClick={() => props.sortData(props.transactions, \"quantity\")}>Quantity</th>\r\n                                        <th onClick={() => props.sortData(props.transactions, \"transactionIdParent\")}>Parent Id</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n\r\n                                        props.transactions.map((item, index) =>\r\n                                            <tr key={item.transactionId}>\r\n                                                <td>{item.transactionId.toUpperCase()}</td>\r\n                                                <td>{item.transactionDateTime}</td>\r\n                                                <td>{item.transactionType}</td>\r\n                                                <td>{item.airportId}</td>\r\n                                                <td>{item.airCraftId === \"\" ? \"N/A\" : item.airCraftId}</td>\r\n                                                <td>{item.quantity}</td>\r\n                                                <td>{item.transactionIdParent === \"\" ? \"N/A\" : item.transactionIdParent.toUpperCase()}</td>\r\n                                                <td>\r\n                                                    <button className=\"btn btn-primary btn-sm\" onClick={() => onReverseTransaction(item)}>\r\n                                                        <i className=\"fa fa-retweet\"></i>\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                }\r\n                {\r\n\r\n                    !showModal ? null :\r\n                        <div className=\"modal-wrapper\">\r\n                            <div className=\"custom-modal\">\r\n                                <div className=\"custom-modal-header\">\r\n                                    <h5>\r\n                                        Add New Transacation\r\n                                        <i className=\"fa fa-times-circle float-right\" onClick={closeTransactionModal}></i>\r\n                                    </h5>\r\n                                </div>\r\n                                <div className=\"custom-modal-body\">\r\n                                    <form onSubmit={createTransaction}>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"airportId\">Airport:</label>\r\n                                            <select className=\"form-control\" id=\"airportId\" name=\"airportId\" value={transaction.airportId} onChange={setTransactionValues} >\r\n                                                <option value=\"\">Select</option>\r\n                                                {\r\n                                                    props.airports.map((item, index) =>\r\n                                                        <option key={item.airportId} value={item.airportId} >{item.airportName}</option>\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"transactionType\">Transaction Type:</label>\r\n                                            <select className=\"form-control\" id=\"transactionType\" name=\"transactionType\" value={transaction.transactionType} onChange={setTransactionValues}>\r\n                                                <option value=\"\">Select</option>\r\n                                                <option value=\"IN\">IN</option>\r\n                                                <option value=\"OUT\">OUT</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        {\r\n                                            transaction.transactionType === \"OUT\" ?\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"aircraftId\">Air Craft:</label>\r\n                                                    <select className=\"form-control\" id=\"airCraftId\" name=\"airCraftId\" value={transaction.airCraftId} onChange={setTransactionValues} >\r\n                                                        <option value=\"\">Select</option>\r\n                                                        {\r\n                                                            props.aircrafts.map((item, index) =>\r\n                                                                <option key={item.airCraftId} value={item.airCraftId} >{item.airCraftNo}</option>\r\n                                                            )\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                                : null\r\n                                        }\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"quantity\">Quantity: </label>\r\n                                            <input type=\"number\" className=\"form-control\" id=\"quantity\" name=\"quantity\" value={transaction.quantity} onChange={setTransactionValues} />\r\n                                        </div>\r\n                                        <div className=\"center-content\">\r\n                                            <button type=\"submit\" className=\"btn btn-light\">Submit</button>\r\n                                            <button type=\"button\" className=\"btn btn-light\" onClick={closeTransactionModal}>Cancel</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                }\r\n\r\n                {\r\n\r\n                    !summaryModal ? null :\r\n                        <div className=\"modal-wrapper\">\r\n                            <div className=\"custom-modal\">\r\n                                <div className=\"custom-modal-header\">\r\n                                    <h5>\r\n                                        Transacation Report\r\n                                        <i className=\"fa fa-times-circle float-right\" onClick={() => setSummaryModal(false)}></i>\r\n                                    </h5>\r\n                                </div>\r\n                                <div className=\"custom-modal-body\">\r\n                                    {\r\n                                        viewSummary()\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        transactions: state.transactions,\r\n        airports: state.airports,\r\n        aircrafts: state.aircrafts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTransaction: (data) => dispatch(addTransaction(data)),\r\n        reverseTransaction: (data) => dispatch(reverseTransaction(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCommonHOC(FuelReport))\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AirCraft } from '../Utils/Models'\r\nimport { addAircraft } from '../Redux/Actions'\r\nimport withCommonHOC from '../Utils/withCommonHOC'\r\n\r\nfunction AirCrafts(props) {\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [aircraft, setAircraft] = useState(new AirCraft())\r\n\r\n    const closeAircraftModal = () => {\r\n        setAircraft(new AirCraft())\r\n        setShowModal(false);\r\n    }\r\n\r\n    const onAircraftValueChanged = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        let aircraftCopy = { ...aircraft }\r\n        aircraftCopy[name] = value\r\n        setAircraft(aircraftCopy)\r\n    }\r\n\r\n    const createAircraft = (e) => {\r\n        e.preventDefault();\r\n        props.addAircraft(aircraft);\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"table-container\">\r\n                <h3 className=\"center-content text-primary\">\r\n                    AirCrafts\r\n                    <button className=\"btn btn-light\" onClick={() => setShowModal(true)}><i className=\"fa fa-plus\"></i></button>\r\n                </h3>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-bordered table-striped data-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Sl no.</th>\r\n                                <th onClick={() => props.sortData(props.aircrafts, \"airCraftNo\")}>Aircraft No</th>\r\n                                <th onClick={() => props.sortData(props.aircrafts, \"airCraftNo\")}>Airline</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                props.aircrafts.map((item, index) =>\r\n                                    <tr key={item.airCraftId}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{item.airCraftNo}</td>\r\n                                        <td>{item.airline}</td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {\r\n                !showModal ? null :\r\n                    <div className=\"modal-wrapper\">\r\n                        <div className=\"custom-modal\">\r\n                            <div className=\"custom-modal-header\">\r\n                                <h5>\r\n                                    Add New Airport\r\n                                    <i className=\"fa fa-times-circle float-right\" onClick={closeAircraftModal}></i>\r\n                                </h5>\r\n                            </div>\r\n                            <div className=\"custom-modal-body\">\r\n                                <form onSubmit={createAircraft}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"airCraftNo\">Aircraft No:</label>\r\n                                        <input id=\"airCraftNo\" name=\"airCraftNo\" className=\"form-control\" value={aircraft.airCraftNo} onChange={onAircraftValueChanged} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"airline\">AirCraft Id: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"airline\" name=\"airline\" value={aircraft.airline} onChange={onAircraftValueChanged} />\r\n                                    </div>\r\n                                    <div className=\"center-content\">\r\n                                        <button type=\"submit\" className=\"btn btn-light\">Submit</button>\r\n                                        <button type=\"button\" className=\"btn btn-light\" onClick={closeAircraftModal}>Cancel</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        aircrafts: state.aircrafts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addAircraft: (data) => dispatch(addAircraft(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCommonHOC(AirCrafts))\r\n","import React, { Component } from 'react';\r\nimport Airports from './Airports';\r\nimport AirportSummary from './AirportSummary';\r\nimport FuelReport from './FuelReport';\r\nimport AirCrafts from './AirCrafts';\r\n\r\nexport class Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            component: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem(\"loggedIn\") !== \"true\") {\r\n            window.location = \"/\";\r\n        }\r\n    }\r\n\r\n    getComponent(component) {\r\n        switch (component) {\r\n            case \"airports\":\r\n                return <Airports />\r\n            case \"aircrafts\":\r\n                return <AirCrafts />\r\n            case \"airportSummary\":\r\n                return <AirportSummary />\r\n            case \"fuelReport\":\r\n                return <FuelReport />\r\n            default:\r\n                return <Airports />\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.setItem(\"loggedIn\", false);\r\n        window.location = '/';\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-2 side-nav\">\r\n                        <div className=\"center-content\"><i className=\"fa fa-paper-plane nav-icon\" aria-hidden=\"true\"></i></div>\r\n                        <span className=\"nav-link\" onClick={() => this.setState({ component: \"airports\" })}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\"><i className=\"fa fa-home\"></i></div>\r\n                                <div className=\"col-10\">Airports</div>\r\n                            </div>\r\n                        </span>\r\n                        <span className=\"nav-link\" onClick={() => this.setState({ component: \"aircrafts\" })}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\"><i className=\"fa fa-plane\"></i></div>\r\n                                <div className=\"col-10\">Aircrafts</div>\r\n                            </div>\r\n                        </span>\r\n                        <span className=\"nav-link\" onClick={() => this.setState({ component: \"airportSummary\" })}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\"><i className=\"fa fa-clipboard\"></i></div>\r\n                                <div className=\"col-10\">Airport Summary</div>\r\n                            </div>\r\n                        </span>\r\n                        <span className=\"nav-link\" onClick={() => this.setState({ component: \"fuelReport\" })}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\"><i className=\"fa fa-indent\"></i></div>\r\n                                <div className=\"col-10\">Fuel Report</div>\r\n                            </div>\r\n                        </span>\r\n                        <span className=\"nav-link\" onClick={this.logout}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\"><i className=\"fas fa-sign-out-alt\"></i></div>\r\n                                <div className=\"col-10\">Logout</div>\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"col-sm-10 dashboard-content\">\r\n                        {\r\n                            this.getComponent(this.state.component)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","import { AIRPORTS, AIRCRAFTS } from \"../Utils/Data\";\r\nimport { ADD_TRANSACTION, REVERSE_TRANSACTION, ADD_AIRPORT, ADD_AIRCRAFT, CREATE_TRANS_FROM_AIRPORT } from \"./ActionTypes\";\r\nimport { handleTransactionFromAirport } from \"./Actions\";\r\n\r\nconst commonInitialState = {\r\n    airports: AIRPORTS,\r\n    aircrafts: AIRCRAFTS,\r\n    transactions: []\r\n}\r\n\r\nexport const commonReducer = (state = commonInitialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TRANSACTION:\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.data]\r\n            }\r\n        case REVERSE_TRANSACTION:\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.data]\r\n            }\r\n        case ADD_AIRPORT:\r\n            return {\r\n                ...state,\r\n                airports: [...state.airports, action.data]\r\n            }\r\n        case ADD_AIRCRAFT:\r\n            return {\r\n                ...state,\r\n                aircrafts: [...state.aircrafts, action.data]\r\n            }\r\n        case CREATE_TRANS_FROM_AIRPORT:\r\n            let result = handleTransactionFromAirport(state.airports, action.airport, action.fuelAction)\r\n            return {\r\n                ...state,\r\n                airports: result.airports,\r\n                transactions: [\r\n                    ...state.transactions,\r\n                    result.transaction\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport { commonReducer } from \"./Reducer\";\r\n\r\nexport const store = createStore(commonReducer)","import React from 'react';\nimport './App.css';\nimport Home from './Components/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Dashboard from './Components/Dashboard';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/Store';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard}></Route>\n          <Route path=\"/\" component={Home}></Route>\n        </Switch>\n      </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}